<local:GameWindowBase x:Class="DrugWars.Wpf.Windows.BuyWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DrugWars.Wpf.Windows"
        mc:Ignorable="d"
        Title="Buy" Height="350" Width="400"
        WindowStartupLocation="CenterOwner"
        ResizeMode="NoResize"
        Background="{DynamicResource WindowBackground}">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
            <Setter Property="FontFamily" Value="{DynamicResource FontFamily}"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource WindowBackground}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource TextForeground}"/>
            <Setter Property="FontFamily" Value="{DynamicResource FontFamily}"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#1A3300"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#264d00"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="Lime"/>
            <Setter Property="BorderBrush" Value="Lime"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="4,2"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="Background" Value="Black"/>
                        <Setter Property="Foreground" Value="Lime"/>
                        <Setter Property="FontFamily" Value="Consolas"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="4,2"/>
                        <Style.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" Value="#1A3300"/>
                                <Setter Property="Foreground" Value="Lime"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="Lime"/>
            <Setter Property="BorderBrush" Value="Lime"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="CaretBrush" Value="Lime"/>
        </Style>
    </Window.Resources>

    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <ListBox x:Name="DrugListBox" Grid.Row="0" Margin="0,0,0,10"
                 ItemsSource="{Binding GameEngine.Drugs}"
                 SelectedItem="{Binding SelectedDrug, Mode=TwoWay}"
                 SelectionChanged="OnDrugSelectionChanged"
                 Background="Black" Foreground="Lime" BorderBrush="Lime" FontFamily="Consolas">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Binding Name}"/>
                        <TextBlock Grid.Column="1" Text="{Binding CurrentPrice, StringFormat='${0:N0}'}" Margin="20,0,0,0"/>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        
        <TextBox Grid.Row="1" 
                 Text="{Binding Quantity, UpdateSourceTrigger=PropertyChanged}"
                 TextChanged="OnQuantityChanged"
                 Margin="0,0,0,10"/>
        
        <TextBlock Grid.Row="2" 
                   Text="{Binding TotalCost, StringFormat='Total Cost: ${0:N0}'}"
                   Margin="0,0,0,10"/>
        
        <TextBlock Grid.Row="3"
                   Text="{Binding ErrorMessage}"
                   Foreground="Red"
                   Visibility="{Binding HasError, Converter={StaticResource BooleanToVisibilityConverter}}"
                   Margin="0,0,0,10"/>
        
        <TextBlock Grid.Row="4"
                   Text="{Binding MaxBuyQuantity, StringFormat='Max you can buy: {0}'}"
                   Margin="0,0,0,10"/>
        
        <StackPanel Grid.Row="5" 
                    Orientation="Horizontal" 
                    HorizontalAlignment="Right">
            <Button Content="Buy" 
                    Click="OnBuyClick"
                    IsEnabled="{Binding CanBuy}"
                    Width="75" 
                    Margin="0,0,10,0"/>
            <Button Content="Cancel" 
                    Click="OnCancelClick"
                    Width="75"/>
        </StackPanel>
    </Grid>
</local:GameWindowBase> 